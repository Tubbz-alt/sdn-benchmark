##
## This file was generated by Google::ProtocolBuffers (0.08)
## on Thu Jun  5 13:10:45 2014
##      
use strict;
use warnings;
use Google::ProtocolBuffers;
{       
    unless (OFMatchPB::OFWildcardFlagsPB->can('_pb_fields_list')) {
        Google::ProtocolBuffers->create_enum(
            'OFMatchPB::OFWildcardFlagsPB',
            [
               ['OFPFW_ALL', 4194303],
               ['OFPFW_IN_PORT', 1],
               ['OFPFW_DL_VLAN', 2],
               ['OFPFW_DL_SRC', 4],
               ['OFPFW_DL_DST', 8],
               ['OFPFW_DL_TYPE', 16],
               ['OFPFW_NW_PROTO', 32],
               ['OFPFW_TP_SRC', 64],
               ['OFPFW_TP_DST', 128],
               ['OFPFW_NW_SRC_ALL', 8192],
               ['OFPFW_NW_SRC_MASK', 16128],
               ['OFPFW_NW_DST_ALL', 524288],
               ['OFPFW_NW_DST_MASK', 1032192],
               ['OFPFW_DL_VLAN_PCP', 1048576],
               ['OFPFW_NW_TOS', 2097152],

            ]
        );
    }
    
    unless (OFMatchPB->can('_pb_fields_list')) {
        Google::ProtocolBuffers->create_message(
            'OFMatchPB',
            [
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    Google::ProtocolBuffers::Constants::TYPE_UINT32(), 
                    'wildcards', 1, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_OPTIONAL(), 
                    Google::ProtocolBuffers::Constants::TYPE_UINT32(), 
                    'inputPort', 2, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_OPTIONAL(), 
                    Google::ProtocolBuffers::Constants::TYPE_UINT64(), 
                    'dataLayerSource', 3, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_OPTIONAL(), 
                    Google::ProtocolBuffers::Constants::TYPE_UINT64(), 
                    'dataLayerDestination', 4, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_OPTIONAL(), 
                    Google::ProtocolBuffers::Constants::TYPE_UINT32(), 
                    'dataLayerVirtualLAN', 5, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_OPTIONAL(), 
                    Google::ProtocolBuffers::Constants::TYPE_UINT32(), 
                    'dataLayerVirtualLANPriorityCodePoint', 6, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_OPTIONAL(), 
                    Google::ProtocolBuffers::Constants::TYPE_UINT32(), 
                    'dataLayerType', 7, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_OPTIONAL(), 
                    Google::ProtocolBuffers::Constants::TYPE_UINT32(), 
                    'networkTypeOfService', 8, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_OPTIONAL(), 
                    Google::ProtocolBuffers::Constants::TYPE_UINT32(), 
                    'networkProtocol', 9, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_OPTIONAL(), 
                    Google::ProtocolBuffers::Constants::TYPE_FIXED32(), 
                    'networkSource', 10, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_OPTIONAL(), 
                    Google::ProtocolBuffers::Constants::TYPE_FIXED32(), 
                    'networkDestination', 11, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_OPTIONAL(), 
                    Google::ProtocolBuffers::Constants::TYPE_UINT32(), 
                    'transportSource', 12, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_OPTIONAL(), 
                    Google::ProtocolBuffers::Constants::TYPE_UINT32(), 
                    'transportDestination', 13, undef
                ],

            ],
            { 'create_accessors' => 1,  }
        );
    }

}
1;
