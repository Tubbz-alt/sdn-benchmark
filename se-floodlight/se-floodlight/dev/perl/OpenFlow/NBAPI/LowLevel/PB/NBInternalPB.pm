##
## This file was generated by Google::ProtocolBuffers (0.08)
## on Thu Jun  5 13:10:42 2014
##      
use strict;
use warnings;
use Google::ProtocolBuffers;
{       
    unless (OFFlowModPB::OFPFlowModFlagsPB->can('_pb_fields_list')) {
        Google::ProtocolBuffers->create_enum(
            'OFFlowModPB::OFPFlowModFlagsPB',
            [
               ['OFPFF_SEND_FLOW_REM', 1],
               ['OFPFF_CHECK_OVERLAP', 2],
               ['OFPFF_EMERG', 4],

            ]
        );
    }
    
    unless (OFActionPB::OFActionTypePB->can('_pb_fields_list')) {
        Google::ProtocolBuffers->create_enum(
            'OFActionPB::OFActionTypePB',
            [
               ['OUTPUT', 0],
               ['SET_VLAN_ID', 1],
               ['SET_VLAN_PCP', 2],
               ['STRIP_VLAN', 3],
               ['SET_DL_SRC', 4],
               ['SET_DL_DST', 5],
               ['SET_NW_SRC', 6],
               ['SET_NW_DST', 7],
               ['SET_NW_TOS', 8],
               ['SET_TP_SRC', 9],
               ['SET_TP_DST', 10],
               ['OPAQUE_ENQUEUE', 11],
               ['VENDOR', 65535],

            ]
        );
    }
    
    unless (OFErrorPB::OFHelloFailedCodePB->can('_pb_fields_list')) {
        Google::ProtocolBuffers->create_enum(
            'OFErrorPB::OFHelloFailedCodePB',
            [
               ['OFPHFC_INCOMPATIBLE', 0],
               ['OFPHFC_EPERM', 1],

            ]
        );
    }
    
    unless (OFErrorPB::OFPortModFailedCodePB->can('_pb_fields_list')) {
        Google::ProtocolBuffers->create_enum(
            'OFErrorPB::OFPortModFailedCodePB',
            [
               ['OFPPMFC_BAD_PORT', 0],
               ['OFPPMFC_BAD_HW_ADDR', 1],

            ]
        );
    }
    
    unless (OFMatchPB::OFWildcardFlagsPB->can('_pb_fields_list')) {
        Google::ProtocolBuffers->create_enum(
            'OFMatchPB::OFWildcardFlagsPB',
            [
               ['OFPFW_ALL', 4194303],
               ['OFPFW_IN_PORT', 1],
               ['OFPFW_DL_VLAN', 2],
               ['OFPFW_DL_SRC', 4],
               ['OFPFW_DL_DST', 8],
               ['OFPFW_DL_TYPE', 16],
               ['OFPFW_NW_PROTO', 32],
               ['OFPFW_TP_SRC', 64],
               ['OFPFW_TP_DST', 128],
               ['OFPFW_NW_SRC_ALL', 8192],
               ['OFPFW_NW_SRC_MASK', 16128],
               ['OFPFW_NW_DST_ALL', 524288],
               ['OFPFW_NW_DST_MASK', 1032192],
               ['OFPFW_DL_VLAN_PCP', 1048576],
               ['OFPFW_NW_TOS', 2097152],

            ]
        );
    }
    
    unless (OFQueueGetConfigReplyPB::OFPacketQueuePB::OFQueuePropPB::OFQueuePropTypePB->can('_pb_fields_list')) {
        Google::ProtocolBuffers->create_enum(
            'OFQueueGetConfigReplyPB::OFPacketQueuePB::OFQueuePropPB::OFQueuePropTypePB',
            [
               ['OFPQT_NONE', 0],
               ['OFPQT_MIN_RATE', 1],

            ]
        );
    }
    
    unless (NBInternalMsgPB::InternalMsgType->can('_pb_fields_list')) {
        Google::ProtocolBuffers->create_enum(
            'NBInternalMsgPB::InternalMsgType',
            [
               ['Error', 0],
               ['Hello', 1],
               ['Welcome', 2],
               ['Goodbye', 3],
               ['AuthenRequest', 4],
               ['AuthenReply', 5],
               ['SetQueuePolicy', 8],
               ['SetQueuePolicyReply', 9],
               ['Ping', 10],
               ['Extension', 11],
               ['ResendWelcome', 12],

            ]
        );
    }
    
    unless (OFMessagePB::OFTypePB->can('_pb_fields_list')) {
        Google::ProtocolBuffers->create_enum(
            'OFMessagePB::OFTypePB',
            [
               ['HELLO', 0],
               ['ERROR', 1],
               ['ECHO_REQUEST', 2],
               ['ECHO_REPLY', 3],
               ['VENDOR', 4],
               ['FEATURES_REQUEST', 5],
               ['FEATURES_REPLY', 6],
               ['GET_CONFIG_REQUEST', 7],
               ['GET_CONFIG_REPLY', 8],
               ['SET_CONFIG', 9],
               ['PACKET_IN', 10],
               ['FLOW_REMOVED', 11],
               ['PORT_STATUS', 12],
               ['PACKET_OUT', 13],
               ['FLOW_MOD', 14],
               ['PORT_MOD', 15],
               ['STATS_REQUEST', 16],
               ['STATS_REPLY', 17],
               ['BARRIER_REQUEST', 18],
               ['BARRIER_REPLY', 19],
               ['QUEUE_GET_CONFIG_REQUEST', 20],
               ['QUEUE_GET_CONFIG_REPLY', 21],
               ['SWITCH_STATUS', 99],
               ['_UNKNOWN_', 2147483647],

            ]
        );
    }
    
    unless (OFPhysicalPortPB::OFPortConfigPB->can('_pb_fields_list')) {
        Google::ProtocolBuffers->create_enum(
            'OFPhysicalPortPB::OFPortConfigPB',
            [
               ['OFPPC_PORT_DOWN', 1],
               ['OFPPC_NO_STP', 2],
               ['OFPPC_NO_RECV', 4],
               ['OFPPC_NO_RECV_STP', 8],
               ['OFPPC_NO_FLOOD', 16],
               ['OFPPC_NO_FWD', 32],
               ['OFPPC_NO_PACKET_IN', 64],

            ]
        );
    }
    
    unless (ErrorMessagePB::ErrorType->can('_pb_fields_list')) {
        Google::ProtocolBuffers->create_enum(
            'ErrorMessagePB::ErrorType',
            [
               ['AUTHENTICATION_FAILURE', 1],
               ['OF_MSGS_DROPPED', 3],
               ['PROTOCOL_ERROR', 4],
               ['QUEUE_LIMIT_EXCEEDED', 5],
               ['UNSUPPORTED_REQUEST', 6],
               ['UNSUPPORTED_EXTENSION', 7],
               ['VERSION_MISMATCH', 8],

            ]
        );
    }
    
    unless (OFPortPB->can('_pb_fields_list')) {
        Google::ProtocolBuffers->create_enum(
            'OFPortPB',
            [
               ['OFPP_MAX', 65280],
               ['OFPP_IN_PORT', 65528],
               ['OFPP_TABLE', 65529],
               ['OFPP_NORMAL', 65530],
               ['OFPP_FLOOD', 65531],
               ['OFPP_ALL', 65532],
               ['OFPP_CONTROLLER', 65533],
               ['OFPP_LOCAL', 65534],
               ['OFPP_NONE', 65535],

            ]
        );
    }
    
    unless (OFErrorPB::OFFlowModFailedCodePB->can('_pb_fields_list')) {
        Google::ProtocolBuffers->create_enum(
            'OFErrorPB::OFFlowModFailedCodePB',
            [
               ['OFPFMFC_ALL_TABLES_FULL', 0],
               ['OFPFMFC_OVERLAP', 1],
               ['OFPFMFC_EPERM', 2],
               ['OFPFMFC_BAD_EMERG_TIMEOUT', 3],
               ['OFPFMFC_BAD_COMMAND', 4],
               ['OFPFMFC_UNSUPPORTED', 5],

            ]
        );
    }
    
    unless (OFErrorPB::OFQueueOpFailedCodePB->can('_pb_fields_list')) {
        Google::ProtocolBuffers->create_enum(
            'OFErrorPB::OFQueueOpFailedCodePB',
            [
               ['OFPQOFC_BAD_PORT', 0],
               ['OFPQOFC_BAD_QUEUE', 1],
               ['OFPQOFC_EPERM', 2],

            ]
        );
    }
    
    unless (OFFlowModPB::OFFlowModCommandPB->can('_pb_fields_list')) {
        Google::ProtocolBuffers->create_enum(
            'OFFlowModPB::OFFlowModCommandPB',
            [
               ['OFPFC_ADD', 0],
               ['OFPFC_MODIFY', 1],
               ['OFPFC_MODIFY_STRICT', 2],
               ['OFPFC_DELETE', 3],
               ['OFPFC_DELETE_STRICT', 4],

            ]
        );
    }
    
    unless (OFPhysicalPortPB::OFPortFeaturesPB->can('_pb_fields_list')) {
        Google::ProtocolBuffers->create_enum(
            'OFPhysicalPortPB::OFPortFeaturesPB',
            [
               ['OFPPF_10MB_HD', 1],
               ['OFPPF_10MB_FD', 2],
               ['OFPPF_100MB_HD', 4],
               ['OFPPF_100MB_FD', 8],
               ['OFPPF_1GB_HD', 16],
               ['OFPPF_1GB_FD', 32],
               ['OFPPF_10GB_FD', 64],
               ['OFPPF_COPPER', 128],
               ['OFPPF_FIBER', 256],
               ['OFPPF_AUTONEG', 512],
               ['OFPPF_PAUSE', 1024],
               ['OFPPF_PAUSE_ASYM', 2048],

            ]
        );
    }
    
    unless (QueueControlStatusCodes->can('_pb_fields_list')) {
        Google::ProtocolBuffers->create_enum(
            'QueueControlStatusCodes',
            [
               ['InvalidLimitsRequest', 1],
               ['InvalidQueueDropPolicyRequest', 2],

            ]
        );
    }
    
    unless (InternalStatusSubtypes->can('_pb_fields_list')) {
        Google::ProtocolBuffers->create_enum(
            'InternalStatusSubtypes',
            [
               ['AUTHENTICATION', 1],
               ['MESSAGE_DISPATCH', 2],
               ['QUEUE_CONTROL', 3],

            ]
        );
    }
    
    unless (ProtocolErrorInfoPB::ProtocolErrorType->can('_pb_fields_list')) {
        Google::ProtocolBuffers->create_enum(
            'ProtocolErrorInfoPB::ProtocolErrorType',
            [
               ['BAD_MESSAGE', 1],
               ['UNEXPECTED_MESSAGE', 2],
               ['STREAM_DECODE_FAILURE', 3],

            ]
        );
    }
    
    unless (PingMessagePB::PingType->can('_pb_fields_list')) {
        Google::ProtocolBuffers->create_enum(
            'PingMessagePB::PingType',
            [
               ['PING_REPLY', 2],
               ['PING_REQUEST', 1],

            ]
        );
    }
    
    unless (OFErrorPB::OFBadActionCodePB->can('_pb_fields_list')) {
        Google::ProtocolBuffers->create_enum(
            'OFErrorPB::OFBadActionCodePB',
            [
               ['OFPBAC_BAD_TYPE', 0],
               ['OFPBAC_BAD_LEN', 1],
               ['OFPBAC_BAD_VENDOR', 2],
               ['OFPBAC_BAD_VENDOR_TYPE', 3],
               ['OFPBAC_BAD_OUT_PORT', 4],
               ['OFPBAC_BAD_ARGUMENT', 5],
               ['OFPBAC_EPERM', 6],
               ['OFPBAC_TOO_MANY', 7],
               ['OFPBAC_BAD_QUEUE', 8],

            ]
        );
    }
    
    unless (OFSwitchStatusPB::SwitchStatusPB->can('_pb_fields_list')) {
        Google::ProtocolBuffers->create_enum(
            'OFSwitchStatusPB::SwitchStatusPB',
            [
               ['ADDED', 0],
               ['REMOVED', 1],
               ['ACTIVATED', 2],
               ['CHANGED', 3],
               ['PORT_CHANGED', 4],

            ]
        );
    }
    
    unless (GoodbyeMessagePB::Reason->can('_pb_fields_list')) {
        Google::ProtocolBuffers->create_enum(
            'GoodbyeMessagePB::Reason',
            [
               ['NONE', 0],
               ['OTHER', 1],
               ['ERROR', 2],
               ['REJECTED', 3],
               ['RESTART', 4],
               ['SHUTDOWN', 5],

            ]
        );
    }
    
    unless (OFStatisticTypePB->can('_pb_fields_list')) {
        Google::ProtocolBuffers->create_enum(
            'OFStatisticTypePB',
            [
               ['DESC', 0],
               ['FLOW', 1],
               ['AGGREGATE', 2],
               ['TABLE', 3],
               ['PORT', 4],
               ['QUEUE', 5],
               ['VENDOR', 65535],

            ]
        );
    }
    
    unless (OFErrorPB::OFBadRequestCodePB->can('_pb_fields_list')) {
        Google::ProtocolBuffers->create_enum(
            'OFErrorPB::OFBadRequestCodePB',
            [
               ['OFPBRC_BAD_VERSION', 0],
               ['OFPBRC_BAD_TYPE', 1],
               ['OFPBRC_BAD_STAT', 2],
               ['OFPBRC_BAD_VENDOR', 3],
               ['OFPBRC_BAD_SUBTYPE', 4],
               ['OFPBRC_EPERM', 5],
               ['OFPBRC_BAD_LEN', 6],
               ['OFPBRC_BUFFER_EMPTY', 7],
               ['OFPBRC_BUFFER_UNKNOWN', 8],

            ]
        );
    }
    
    unless (OFFlowRemovedPB::OFFlowRemovedReasonPB->can('_pb_fields_list')) {
        Google::ProtocolBuffers->create_enum(
            'OFFlowRemovedPB::OFFlowRemovedReasonPB',
            [
               ['OFPRR_IDLE_TIMEOUT', 0],
               ['OFPRR_HARD_TIMEOUT', 1],
               ['OFPRR_DELETE', 2],

            ]
        );
    }
    
    unless (OFPacketInReasonPB->can('_pb_fields_list')) {
        Google::ProtocolBuffers->create_enum(
            'OFPacketInReasonPB',
            [
               ['NO_MATCH', 0],
               ['ACTION', 1],

            ]
        );
    }
    
    unless (OFErrorPB::OFErrorTypePB->can('_pb_fields_list')) {
        Google::ProtocolBuffers->create_enum(
            'OFErrorPB::OFErrorTypePB',
            [
               ['OFPET_HELLO_FAILED', 0],
               ['OFPET_BAD_REQUEST', 1],
               ['OFPET_BAD_ACTION', 2],
               ['OFPET_FLOW_MOD_FAILED', 3],
               ['OFPET_PORT_MOD_FAILED', 4],
               ['OFPET_QUEUE_OP_FAILED', 5],
               ['OFPET_VENDOR_ERROR', 45250],

            ]
        );
    }
    
    unless (OFPhysicalPortPB::OFPortStatePB->can('_pb_fields_list')) {
        Google::ProtocolBuffers->create_enum(
            'OFPhysicalPortPB::OFPortStatePB',
            [
               ['OFPPS_LINK_DOWN', 1],
               ['OFPPS_STP_LISTEN', 0],
               ['OFPPS_STP_LEARN', 256],
               ['OFPPS_STP_FORWARD', 512],
               ['OFPPS_STP_BLOCK', 768],
               ['OFPPS_STP_MASK', 768],

            ]
        );
    }
    
    unless (OFSwitchStatusPB::PortChangeTypePB->can('_pb_fields_list')) {
        Google::ProtocolBuffers->create_enum(
            'OFSwitchStatusPB::PortChangeTypePB',
            [
               ['ADD', 0],
               ['OTHER_UPDATE', 1],
               ['DELETE', 2],
               ['UP', 3],
               ['DOWN', 4],

            ]
        );
    }
    
    unless (OFPortStatusPB::OFPortReasonPB->can('_pb_fields_list')) {
        Google::ProtocolBuffers->create_enum(
            'OFPortStatusPB::OFPortReasonPB',
            [
               ['OFPPR_ADD', 0],
               ['OFPPR_DELETE', 1],
               ['OFPPR_MODIFY', 2],

            ]
        );
    }
    
    unless (OFBarrierReplyPB->can('_pb_fields_list')) {
        Google::ProtocolBuffers->create_message(
            'OFBarrierReplyPB',
            [

            ],
            { 'create_accessors' => 1,  }
        );
    }

    unless (QueueDropPB->can('_pb_fields_list')) {
        Google::ProtocolBuffers->create_message(
            'QueueDropPB',
            [
                [
                    Google::ProtocolBuffers::Constants::LABEL_REPEATED(), 
                    'OFMessagePB::OFTypePB', 
                    'dropOrder', 1, undef
                ],

            ],
            { 'create_accessors' => 1,  }
        );
    }

    unless (OFHelloPB->can('_pb_fields_list')) {
        Google::ProtocolBuffers->create_message(
            'OFHelloPB',
            [

            ],
            { 'create_accessors' => 1,  }
        );
    }

    unless (OFPortStatusPB->can('_pb_fields_list')) {
        Google::ProtocolBuffers->create_message(
            'OFPortStatusPB',
            [
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    Google::ProtocolBuffers::Constants::TYPE_UINT32(), 
                    'reason', 1, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    'OFPhysicalPortPB', 
                    'desc', 2, undef
                ],

            ],
            { 'create_accessors' => 1,  }
        );
    }

    unless (OFGetConfigRequestPB->can('_pb_fields_list')) {
        Google::ProtocolBuffers->create_message(
            'OFGetConfigRequestPB',
            [

            ],
            { 'create_accessors' => 1,  }
        );
    }

    unless (OFQueueGetConfigRequestPB->can('_pb_fields_list')) {
        Google::ProtocolBuffers->create_message(
            'OFQueueGetConfigRequestPB',
            [
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    Google::ProtocolBuffers::Constants::TYPE_UINT32(), 
                    'portNumber', 1, undef
                ],

            ],
            { 'create_accessors' => 1,  }
        );
    }

    unless (AuthenRequestMessagePB->can('_pb_fields_list')) {
        Google::ProtocolBuffers->create_message(
            'AuthenRequestMessagePB',
            [
                [
                    Google::ProtocolBuffers::Constants::LABEL_REPEATED(), 
                    'AuthenRequestMessagePB::AuthenRequestPB', 
                    'authenRequest', 1, undef
                ],

            ],
            { 'create_accessors' => 1,  }
        );
    }

    unless (OFFlowRemovedPB->can('_pb_fields_list')) {
        Google::ProtocolBuffers->create_message(
            'OFFlowRemovedPB',
            [
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    'OFMatchPB', 
                    'match', 1, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    Google::ProtocolBuffers::Constants::TYPE_UINT64(), 
                    'cookie', 2, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    Google::ProtocolBuffers::Constants::TYPE_UINT32(), 
                    'priority', 3, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    'OFFlowRemovedPB::OFFlowRemovedReasonPB', 
                    'reason', 4, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    Google::ProtocolBuffers::Constants::TYPE_UINT32(), 
                    'durationSeconds', 5, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    Google::ProtocolBuffers::Constants::TYPE_UINT32(), 
                    'durationNanoseconds', 6, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    Google::ProtocolBuffers::Constants::TYPE_UINT32(), 
                    'idleTimeout', 7, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    Google::ProtocolBuffers::Constants::TYPE_UINT64(), 
                    'packetCount', 8, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    Google::ProtocolBuffers::Constants::TYPE_UINT64(), 
                    'byteCount', 9, undef
                ],

            ],
            { 'create_accessors' => 1,  }
        );
    }

    unless (OFActionPB->can('_pb_fields_list')) {
        Google::ProtocolBuffers->create_message(
            'OFActionPB',
            [
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    'OFActionPB::OFActionTypePB', 
                    'actionType', 1, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_OPTIONAL(), 
                    'OFActionOutputPB', 
                    'actionOutput', 2, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_OPTIONAL(), 
                    'OFActionVirtualLanIdentifierPB', 
                    'actionVirtualLanIdentifier', 3, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_OPTIONAL(), 
                    'OFActionVirtualLanPriorityCodePointPB', 
                    'actionVirtualLanPriorityCodePoint', 4, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_OPTIONAL(), 
                    'OFActionStripVirtualLanPB', 
                    'actionStripVirtualLan', 5, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_OPTIONAL(), 
                    'OFActionDataLayerSourcePB', 
                    'actionDataLayerSource', 6, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_OPTIONAL(), 
                    'OFActionDataLayerDestinationPB', 
                    'actionDataLayerDestination', 7, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_OPTIONAL(), 
                    'OFActionNetworkLayerSourcePB', 
                    'actionNetworkLayerSource', 8, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_OPTIONAL(), 
                    'OFActionNetworkLayerDestinationPB', 
                    'actionNetworkLayerDestination', 9, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_OPTIONAL(), 
                    'OFActionNetworkTypeOfServicePB', 
                    'actionNetworkTypeOfService', 10, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_OPTIONAL(), 
                    'OFActionTransportLayerSourcePB', 
                    'actionTransportLayerSource', 11, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_OPTIONAL(), 
                    'OFActionTransportLayerDestinationPB', 
                    'actionTransportLayerDestination', 12, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_OPTIONAL(), 
                    'OFActionEnqueuePB', 
                    'actionEnqueue', 13, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_OPTIONAL(), 
                    'OFActionVendorPB', 
                    'actionVendor', 14, undef
                ],

            ],
            { 'create_accessors' => 1,  }
        );
    }

    unless (GoodbyeMessagePB->can('_pb_fields_list')) {
        Google::ProtocolBuffers->create_message(
            'GoodbyeMessagePB',
            [
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    'GoodbyeMessagePB::Reason', 
                    'reason', 1, undef
                ],

            ],
            { 'create_accessors' => 1,  }
        );
    }

    unless (OFActionNetworkLayerDestinationPB->can('_pb_fields_list')) {
        Google::ProtocolBuffers->create_message(
            'OFActionNetworkLayerDestinationPB',
            [
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    Google::ProtocolBuffers::Constants::TYPE_UINT32(), 
                    'networkAddress', 1, undef
                ],

            ],
            { 'create_accessors' => 1,  }
        );
    }

    unless (OFDescriptionStatisticsPB->can('_pb_fields_list')) {
        Google::ProtocolBuffers->create_message(
            'OFDescriptionStatisticsPB',
            [
                [
                    Google::ProtocolBuffers::Constants::LABEL_OPTIONAL(), 
                    Google::ProtocolBuffers::Constants::TYPE_STRING(), 
                    'manufacturerDescription', 1, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_OPTIONAL(), 
                    Google::ProtocolBuffers::Constants::TYPE_STRING(), 
                    'hardwareDescription', 2, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_OPTIONAL(), 
                    Google::ProtocolBuffers::Constants::TYPE_STRING(), 
                    'softwareDescription', 3, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_OPTIONAL(), 
                    Google::ProtocolBuffers::Constants::TYPE_STRING(), 
                    'serialNumber', 4, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_OPTIONAL(), 
                    Google::ProtocolBuffers::Constants::TYPE_STRING(), 
                    'datapathDescription', 5, undef
                ],

            ],
            { 'create_accessors' => 1,  }
        );
    }

    unless (HostEntPB->can('_pb_fields_list')) {
        Google::ProtocolBuffers->create_message(
            'HostEntPB',
            [
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    Google::ProtocolBuffers::Constants::TYPE_STRING(), 
                    'canonname', 1, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_REPEATED(), 
                    Google::ProtocolBuffers::Constants::TYPE_STRING(), 
                    'alias', 2, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_REPEATED(), 
                    Google::ProtocolBuffers::Constants::TYPE_BYTES(), 
                    'rawIP', 3, undef
                ],

            ],
            { 'create_accessors' => 1,  }
        );
    }

    unless (OFPacketOutPB->can('_pb_fields_list')) {
        Google::ProtocolBuffers->create_message(
            'OFPacketOutPB',
            [
                [
                    Google::ProtocolBuffers::Constants::LABEL_OPTIONAL(), 
                    Google::ProtocolBuffers::Constants::TYPE_SINT32(), 
                    'bufferId', 1, -1
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    Google::ProtocolBuffers::Constants::TYPE_UINT32(), 
                    'inPort', 2, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_REPEATED(), 
                    'OFActionPB', 
                    'actions', 4, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_OPTIONAL(), 
                    Google::ProtocolBuffers::Constants::TYPE_BYTES(), 
                    'packetData', 5, undef
                ],

            ],
            { 'create_accessors' => 1,  }
        );
    }

    unless (OFActionVendorPB->can('_pb_fields_list')) {
        Google::ProtocolBuffers->create_message(
            'OFActionVendorPB',
            [
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    Google::ProtocolBuffers::Constants::TYPE_UINT32(), 
                    'vendor', 1, undef
                ],

            ],
            { 'create_accessors' => 1,  }
        );
    }

    unless (OFActionDataLayerSourcePB->can('_pb_fields_list')) {
        Google::ProtocolBuffers->create_message(
            'OFActionDataLayerSourcePB',
            [
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    Google::ProtocolBuffers::Constants::TYPE_UINT64(), 
                    'dataLayerAddress', 1, undef
                ],

            ],
            { 'create_accessors' => 1,  }
        );
    }

    unless (InetSockAddrPB->can('_pb_fields_list')) {
        Google::ProtocolBuffers->create_message(
            'InetSockAddrPB',
            [
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    Google::ProtocolBuffers::Constants::TYPE_BYTES(), 
                    'rawIP', 1, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_OPTIONAL(), 
                    Google::ProtocolBuffers::Constants::TYPE_INT32(), 
                    'port', 2, undef
                ],

            ],
            { 'create_accessors' => 1,  }
        );
    }

    unless (NBInternalMsgPB->can('_pb_fields_list')) {
        Google::ProtocolBuffers->create_message(
            'NBInternalMsgPB',
            [
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    'NBInternalMsgPB::InternalMsgType', 
                    'msgType', 1, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_OPTIONAL(), 
                    'ErrorMessagePB', 
                    'errorMessage', 2, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_OPTIONAL(), 
                    'HelloMessagePB', 
                    'helloMessage', 3, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_OPTIONAL(), 
                    'WelcomeMessagePB', 
                    'welcomeMessage', 4, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_OPTIONAL(), 
                    'GoodbyeMessagePB', 
                    'goodbyeMessage', 5, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_OPTIONAL(), 
                    'AuthenRequestMessagePB', 
                    'authenRequestMessage', 6, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_OPTIONAL(), 
                    'AuthenReplyMessagePB', 
                    'authenReplyMessage', 7, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_OPTIONAL(), 
                    'SetQueuePolicyMessagePB', 
                    'setQueuePolicyMessage', 8, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_OPTIONAL(), 
                    'SetQueuePolicyReplyMessagePB', 
                    'setQueuePolicyReplyMessage', 9, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_OPTIONAL(), 
                    'PingMessagePB', 
                    'pingMessage', 10, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_OPTIONAL(), 
                    'ExtensionMessagePB', 
                    'extensionMessage', 11, undef
                ],

            ],
            { 'create_accessors' => 1,  }
        );
    }

    unless (WelcomeMessagePB->can('_pb_fields_list')) {
        Google::ProtocolBuffers->create_message(
            'WelcomeMessagePB',
            [
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    'SetQueuePolicyReplyMessagePB', 
                    'currentQueuePolicy', 1, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_OPTIONAL(), 
                    Google::ProtocolBuffers::Constants::TYPE_BYTES(), 
                    'ofCapabilities', 2, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_REPEATED(), 
                    Google::ProtocolBuffers::Constants::TYPE_STRING(), 
                    'ctlCapabilities', 3, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_REPEATED(), 
                    Google::ProtocolBuffers::Constants::TYPE_STRING(), 
                    'internalExtensionIDs', 4, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_REPEATED(), 
                    Google::ProtocolBuffers::Constants::TYPE_STRING(), 
                    'controllerExtensionIDs', 5, undef
                ],

            ],
            { 'create_accessors' => 1,  }
        );
    }

    unless (OFSwitchStatusPB->can('_pb_fields_list')) {
        Google::ProtocolBuffers->create_message(
            'OFSwitchStatusPB',
            [
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    'OFSwitchStatusPB::SwitchStatusPB', 
                    'status', 1, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_REPEATED(), 
                    'OFPhysicalPortPB', 
                    'ports', 2, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_OPTIONAL(), 
                    'OFSwitchStatusPB::PortChangeTypePB', 
                    'portChangeType', 3, undef
                ],

            ],
            { 'create_accessors' => 1,  }
        );
    }

    unless (OFActionNetworkTypeOfServicePB->can('_pb_fields_list')) {
        Google::ProtocolBuffers->create_message(
            'OFActionNetworkTypeOfServicePB',
            [
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    Google::ProtocolBuffers::Constants::TYPE_UINT32(), 
                    'networkTypeOfService', 1, undef
                ],

            ],
            { 'create_accessors' => 1,  }
        );
    }

    unless (OFMatchPB->can('_pb_fields_list')) {
        Google::ProtocolBuffers->create_message(
            'OFMatchPB',
            [
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    Google::ProtocolBuffers::Constants::TYPE_UINT32(), 
                    'wildcards', 1, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_OPTIONAL(), 
                    Google::ProtocolBuffers::Constants::TYPE_UINT32(), 
                    'inputPort', 2, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_OPTIONAL(), 
                    Google::ProtocolBuffers::Constants::TYPE_UINT64(), 
                    'dataLayerSource', 3, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_OPTIONAL(), 
                    Google::ProtocolBuffers::Constants::TYPE_UINT64(), 
                    'dataLayerDestination', 4, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_OPTIONAL(), 
                    Google::ProtocolBuffers::Constants::TYPE_UINT32(), 
                    'dataLayerVirtualLAN', 5, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_OPTIONAL(), 
                    Google::ProtocolBuffers::Constants::TYPE_UINT32(), 
                    'dataLayerVirtualLANPriorityCodePoint', 6, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_OPTIONAL(), 
                    Google::ProtocolBuffers::Constants::TYPE_UINT32(), 
                    'dataLayerType', 7, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_OPTIONAL(), 
                    Google::ProtocolBuffers::Constants::TYPE_UINT32(), 
                    'networkTypeOfService', 8, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_OPTIONAL(), 
                    Google::ProtocolBuffers::Constants::TYPE_UINT32(), 
                    'networkProtocol', 9, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_OPTIONAL(), 
                    Google::ProtocolBuffers::Constants::TYPE_FIXED32(), 
                    'networkSource', 10, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_OPTIONAL(), 
                    Google::ProtocolBuffers::Constants::TYPE_FIXED32(), 
                    'networkDestination', 11, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_OPTIONAL(), 
                    Google::ProtocolBuffers::Constants::TYPE_UINT32(), 
                    'transportSource', 12, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_OPTIONAL(), 
                    Google::ProtocolBuffers::Constants::TYPE_UINT32(), 
                    'transportDestination', 13, undef
                ],

            ],
            { 'create_accessors' => 1,  }
        );
    }

    unless (OFErrorPB->can('_pb_fields_list')) {
        Google::ProtocolBuffers->create_message(
            'OFErrorPB',
            [
                [
                    Google::ProtocolBuffers::Constants::LABEL_OPTIONAL(), 
                    Google::ProtocolBuffers::Constants::TYPE_UINT32(), 
                    'errorType', 1, 65535
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_OPTIONAL(), 
                    Google::ProtocolBuffers::Constants::TYPE_UINT32(), 
                    'errorCode', 2, 0
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_OPTIONAL(), 
                    Google::ProtocolBuffers::Constants::TYPE_UINT32(), 
                    'vendor', 3, 0
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_OPTIONAL(), 
                    Google::ProtocolBuffers::Constants::TYPE_UINT32(), 
                    'vendorErrorType', 4, 0
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_OPTIONAL(), 
                    Google::ProtocolBuffers::Constants::TYPE_UINT32(), 
                    'vendorErrorCode', 5, 0
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_OPTIONAL(), 
                    Google::ProtocolBuffers::Constants::TYPE_BYTES(), 
                    'error', 6, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_OPTIONAL(), 
                    Google::ProtocolBuffers::Constants::TYPE_STRING(), 
                    'errorString', 7, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_OPTIONAL(), 
                    'OFMessagePB', 
                    'ofMessage', 8, undef
                ],

            ],
            { 'create_accessors' => 1,  }
        );
    }

    unless (OFVendorPB->can('_pb_fields_list')) {
        Google::ProtocolBuffers->create_message(
            'OFVendorPB',
            [
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    Google::ProtocolBuffers::Constants::TYPE_UINT32(), 
                    'vendor', 1, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_OPTIONAL(), 
                    Google::ProtocolBuffers::Constants::TYPE_BYTES(), 
                    'vendorData', 2, undef
                ],

            ],
            { 'create_accessors' => 1,  }
        );
    }

    unless (AuthenReplyMessagePB->can('_pb_fields_list')) {
        Google::ProtocolBuffers->create_message(
            'AuthenReplyMessagePB',
            [
                [
                    Google::ProtocolBuffers::Constants::LABEL_REPEATED(), 
                    'AuthenReplyMessagePB::AuthenReplyPB', 
                    'authenReply', 1, undef
                ],

            ],
            { 'create_accessors' => 1,  }
        );
    }

    unless (PingMessagePB->can('_pb_fields_list')) {
        Google::ProtocolBuffers->create_message(
            'PingMessagePB',
            [
                [
                    Google::ProtocolBuffers::Constants::LABEL_OPTIONAL(), 
                    'PingMessagePB::PingType', 
                    'pingType', 1, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_OPTIONAL(), 
                    Google::ProtocolBuffers::Constants::TYPE_UINT32(), 
                    'requestID', 2, undef
                ],

            ],
            { 'create_accessors' => 1,  }
        );
    }

    unless (OFPortStatisticsRequestPB->can('_pb_fields_list')) {
        Google::ProtocolBuffers->create_message(
            'OFPortStatisticsRequestPB',
            [
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    Google::ProtocolBuffers::Constants::TYPE_UINT32(), 
                    'portNumber', 1, undef
                ],

            ],
            { 'create_accessors' => 1,  }
        );
    }

    unless (OFActionNetworkLayerSourcePB->can('_pb_fields_list')) {
        Google::ProtocolBuffers->create_message(
            'OFActionNetworkLayerSourcePB',
            [
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    Google::ProtocolBuffers::Constants::TYPE_UINT32(), 
                    'networkAddress', 1, undef
                ],

            ],
            { 'create_accessors' => 1,  }
        );
    }

    unless (OFTableStatisticsPB->can('_pb_fields_list')) {
        Google::ProtocolBuffers->create_message(
            'OFTableStatisticsPB',
            [
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    Google::ProtocolBuffers::Constants::TYPE_UINT32(), 
                    'tableId', 1, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_OPTIONAL(), 
                    Google::ProtocolBuffers::Constants::TYPE_STRING(), 
                    'name', 2, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    Google::ProtocolBuffers::Constants::TYPE_UINT32(), 
                    'wildcards', 3, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    Google::ProtocolBuffers::Constants::TYPE_UINT32(), 
                    'maximumEntries', 4, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    Google::ProtocolBuffers::Constants::TYPE_UINT32(), 
                    'activeCount', 5, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    Google::ProtocolBuffers::Constants::TYPE_UINT64(), 
                    'lookupCount', 6, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    Google::ProtocolBuffers::Constants::TYPE_UINT64(), 
                    'matchedCount', 7, undef
                ],

            ],
            { 'create_accessors' => 1,  }
        );
    }

    unless (ExtensionMessagePB->can('_pb_fields_list')) {
        Google::ProtocolBuffers->create_message(
            'ExtensionMessagePB',
            [
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    Google::ProtocolBuffers::Constants::TYPE_STRING(), 
                    'extensionID', 1, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_OPTIONAL(), 
                    Google::ProtocolBuffers::Constants::TYPE_UINT32(), 
                    'requestID', 2, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_OPTIONAL(), 
                    'ValuePB', 
                    'value', 3, undef
                ],

            ],
            { 'create_accessors' => 1,  }
        );
    }

    unless (VersionMismatchInfoPB->can('_pb_fields_list')) {
        Google::ProtocolBuffers->create_message(
            'VersionMismatchInfoPB',
            [
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    Google::ProtocolBuffers::Constants::TYPE_UINT32(), 
                    'minVersionNB', 1, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    Google::ProtocolBuffers::Constants::TYPE_UINT32(), 
                    'maxVersionNB', 2, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    Google::ProtocolBuffers::Constants::TYPE_UINT32(), 
                    'minVersionSB', 3, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    Google::ProtocolBuffers::Constants::TYPE_UINT32(), 
                    'maxVersionSB', 4, undef
                ],

            ],
            { 'create_accessors' => 1,  }
        );
    }

    unless (OFPhysicalPortPB->can('_pb_fields_list')) {
        Google::ProtocolBuffers->create_message(
            'OFPhysicalPortPB',
            [
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    Google::ProtocolBuffers::Constants::TYPE_UINT32(), 
                    'portNumber', 1, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    Google::ProtocolBuffers::Constants::TYPE_UINT64(), 
                    'hardwareAddress', 2, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    Google::ProtocolBuffers::Constants::TYPE_STRING(), 
                    'name', 3, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    Google::ProtocolBuffers::Constants::TYPE_UINT32(), 
                    'config', 4, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    Google::ProtocolBuffers::Constants::TYPE_UINT32(), 
                    'state', 5, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    Google::ProtocolBuffers::Constants::TYPE_UINT32(), 
                    'currentFeatures', 6, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    Google::ProtocolBuffers::Constants::TYPE_UINT32(), 
                    'advertisedFeatures', 7, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    Google::ProtocolBuffers::Constants::TYPE_UINT32(), 
                    'supportedFeatures', 8, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    Google::ProtocolBuffers::Constants::TYPE_UINT32(), 
                    'peerFeatures', 9, undef
                ],

            ],
            { 'create_accessors' => 1,  }
        );
    }

    unless (ValuePB->can('_pb_fields_list')) {
        Google::ProtocolBuffers->create_message(
            'ValuePB',
            [
                [
                    Google::ProtocolBuffers::Constants::LABEL_OPTIONAL(), 
                    Google::ProtocolBuffers::Constants::TYPE_INT32(), 
                    'anInt32', 1, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_OPTIONAL(), 
                    Google::ProtocolBuffers::Constants::TYPE_INT64(), 
                    'anInt64', 2, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_OPTIONAL(), 
                    Google::ProtocolBuffers::Constants::TYPE_BOOL(), 
                    'aBool', 3, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_OPTIONAL(), 
                    Google::ProtocolBuffers::Constants::TYPE_STRING(), 
                    'aString', 4, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_OPTIONAL(), 
                    Google::ProtocolBuffers::Constants::TYPE_BYTES(), 
                    'byteArray', 5, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_OPTIONAL(), 
                    'InetSockAddrPB', 
                    'iSockAddr', 6, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_OPTIONAL(), 
                    'HostEntPB', 
                    'hostEnt', 7, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_REPEATED(), 
                    'AddrInfoPB', 
                    'addrInfo', 8, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_REPEATED(), 
                    'ValuePB', 
                    'aValue', 9, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_REPEATED(), 
                    'NameValPB', 
                    'dict', 10, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_OPTIONAL(), 
                    'OFActionPB', 
                    'ofAction', 11, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_OPTIONAL(), 
                    'OFMatchPB', 
                    'ofMatch', 12, undef
                ],

            ],
            { 'create_accessors' => 1,  }
        );
    }

    unless (OFQueueGetConfigReplyPB::OFPacketQueuePB->can('_pb_fields_list')) {
        Google::ProtocolBuffers->create_message(
            'OFQueueGetConfigReplyPB::OFPacketQueuePB',
            [
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    Google::ProtocolBuffers::Constants::TYPE_UINT32(), 
                    'queueId', 1, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_REPEATED(), 
                    'OFQueueGetConfigReplyPB::OFPacketQueuePB::OFQueuePropPB', 
                    'properties', 2, undef
                ],

            ],
            { 'create_accessors' => 1,  }
        );
    }

    unless (OFPortModPB->can('_pb_fields_list')) {
        Google::ProtocolBuffers->create_message(
            'OFPortModPB',
            [
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    Google::ProtocolBuffers::Constants::TYPE_UINT32(), 
                    'portNumber', 1, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    Google::ProtocolBuffers::Constants::TYPE_UINT64(), 
                    'hardwareAddress', 2, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    Google::ProtocolBuffers::Constants::TYPE_UINT32(), 
                    'config', 3, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    Google::ProtocolBuffers::Constants::TYPE_UINT32(), 
                    'mask', 4, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    Google::ProtocolBuffers::Constants::TYPE_UINT32(), 
                    'advertise', 5, undef
                ],

            ],
            { 'create_accessors' => 1,  }
        );
    }

    unless (OFActionOutputPB->can('_pb_fields_list')) {
        Google::ProtocolBuffers->create_message(
            'OFActionOutputPB',
            [
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    Google::ProtocolBuffers::Constants::TYPE_UINT32(), 
                    'port', 1, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_OPTIONAL(), 
                    Google::ProtocolBuffers::Constants::TYPE_UINT32(), 
                    'maxLength', 2, 1600
                ],

            ],
            { 'create_accessors' => 1,  }
        );
    }

    unless (OFVendorStatisticsPB->can('_pb_fields_list')) {
        Google::ProtocolBuffers->create_message(
            'OFVendorStatisticsPB',
            [
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    Google::ProtocolBuffers::Constants::TYPE_UINT32(), 
                    'vendor', 1, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_OPTIONAL(), 
                    Google::ProtocolBuffers::Constants::TYPE_BYTES(), 
                    'body', 2, undef
                ],

            ],
            { 'create_accessors' => 1,  }
        );
    }

    unless (OFActionDataLayerDestinationPB->can('_pb_fields_list')) {
        Google::ProtocolBuffers->create_message(
            'OFActionDataLayerDestinationPB',
            [
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    Google::ProtocolBuffers::Constants::TYPE_UINT64(), 
                    'dataLayerAddress', 1, undef
                ],

            ],
            { 'create_accessors' => 1,  }
        );
    }

    unless (OFQueueStatisticsReplyPB->can('_pb_fields_list')) {
        Google::ProtocolBuffers->create_message(
            'OFQueueStatisticsReplyPB',
            [
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    Google::ProtocolBuffers::Constants::TYPE_UINT32(), 
                    'portNumber', 1, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    Google::ProtocolBuffers::Constants::TYPE_UINT32(), 
                    'queueId', 2, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    Google::ProtocolBuffers::Constants::TYPE_UINT64(), 
                    'transmitBytes', 3, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    Google::ProtocolBuffers::Constants::TYPE_UINT64(), 
                    'transmitPackets', 4, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    Google::ProtocolBuffers::Constants::TYPE_UINT64(), 
                    'transmitErrors', 5, undef
                ],

            ],
            { 'create_accessors' => 1,  }
        );
    }

    unless (NameValPB->can('_pb_fields_list')) {
        Google::ProtocolBuffers->create_message(
            'NameValPB',
            [
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    'ValuePB', 
                    'name', 1, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    'ValuePB', 
                    'value', 2, undef
                ],

            ],
            { 'create_accessors' => 1,  }
        );
    }

    unless (SetQueuePolicyReplyMessagePB->can('_pb_fields_list')) {
        Google::ProtocolBuffers->create_message(
            'SetQueuePolicyReplyMessagePB',
            [
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    Google::ProtocolBuffers::Constants::TYPE_UINT32(), 
                    'queueLimit', 1, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    Google::ProtocolBuffers::Constants::TYPE_UINT32(), 
                    'dropTo', 2, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    'QueueDropPB', 
                    'dropPolicy', 3, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_OPTIONAL(), 
                    Google::ProtocolBuffers::Constants::TYPE_UINT32(), 
                    'requestID', 4, undef
                ],

            ],
            { 'create_accessors' => 1,  }
        );
    }

    unless (OFActionVirtualLanPriorityCodePointPB->can('_pb_fields_list')) {
        Google::ProtocolBuffers->create_message(
            'OFActionVirtualLanPriorityCodePointPB',
            [
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    Google::ProtocolBuffers::Constants::TYPE_UINT32(), 
                    'virtualLanPriorityCodePoint', 1, undef
                ],

            ],
            { 'create_accessors' => 1,  }
        );
    }

    unless (SetQueuePolicyMessagePB->can('_pb_fields_list')) {
        Google::ProtocolBuffers->create_message(
            'SetQueuePolicyMessagePB',
            [
                [
                    Google::ProtocolBuffers::Constants::LABEL_OPTIONAL(), 
                    Google::ProtocolBuffers::Constants::TYPE_UINT32(), 
                    'queueLimit', 1, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_OPTIONAL(), 
                    Google::ProtocolBuffers::Constants::TYPE_UINT32(), 
                    'dropTo', 2, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_OPTIONAL(), 
                    'QueueDropPB', 
                    'dropPolicy', 3, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_OPTIONAL(), 
                    Google::ProtocolBuffers::Constants::TYPE_UINT32(), 
                    'requestID', 4, undef
                ],

            ],
            { 'create_accessors' => 1,  }
        );
    }

    unless (OFFlowModPB->can('_pb_fields_list')) {
        Google::ProtocolBuffers->create_message(
            'OFFlowModPB',
            [
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    'OFMatchPB', 
                    'match', 1, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_OPTIONAL(), 
                    Google::ProtocolBuffers::Constants::TYPE_UINT64(), 
                    'cookie', 2, 0
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    Google::ProtocolBuffers::Constants::TYPE_UINT32(), 
                    'command', 3, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_OPTIONAL(), 
                    Google::ProtocolBuffers::Constants::TYPE_UINT32(), 
                    'idleTimeout', 4, 0
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_OPTIONAL(), 
                    Google::ProtocolBuffers::Constants::TYPE_UINT32(), 
                    'hardTimeout', 5, 0
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_OPTIONAL(), 
                    Google::ProtocolBuffers::Constants::TYPE_UINT32(), 
                    'priority', 6, 0
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_OPTIONAL(), 
                    Google::ProtocolBuffers::Constants::TYPE_SINT32(), 
                    'bufferId', 7, -1
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_OPTIONAL(), 
                    Google::ProtocolBuffers::Constants::TYPE_UINT32(), 
                    'outPort', 8, 65535
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_OPTIONAL(), 
                    Google::ProtocolBuffers::Constants::TYPE_UINT32(), 
                    'flags', 9, 0
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_REPEATED(), 
                    'OFActionPB', 
                    'actions', 10, undef
                ],

            ],
            { 'create_accessors' => 1,  }
        );
    }

    unless (OFStatisticsReplyPB->can('_pb_fields_list')) {
        Google::ProtocolBuffers->create_message(
            'OFStatisticsReplyPB',
            [
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    'OFStatisticTypePB', 
                    'statisticType', 1, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    Google::ProtocolBuffers::Constants::TYPE_UINT32(), 
                    'flags', 2, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_OPTIONAL(), 
                    'OFDescriptionStatisticsPB', 
                    'descriptionStatistics', 3, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_REPEATED(), 
                    'OFFlowStatisticsReplyPB', 
                    'flowStatisticsReply', 4, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_OPTIONAL(), 
                    'OFAggregateStatisticsReplyPB', 
                    'aggregateStatisticsReply', 5, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_REPEATED(), 
                    'OFTableStatisticsPB', 
                    'tableStatistics', 6, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_REPEATED(), 
                    'OFPortStatisticsReplyPB', 
                    'portStatisticsReply', 7, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_REPEATED(), 
                    'OFQueueStatisticsReplyPB', 
                    'queueStatisticsReply', 8, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_OPTIONAL(), 
                    'OFVendorStatisticsPB', 
                    'vendorStatistics', 9, undef
                ],

            ],
            { 'create_accessors' => 1,  }
        );
    }

    unless (OFGetConfigReplyPB->can('_pb_fields_list')) {
        Google::ProtocolBuffers->create_message(
            'OFGetConfigReplyPB',
            [
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    Google::ProtocolBuffers::Constants::TYPE_UINT32(), 
                    'flags', 1, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    Google::ProtocolBuffers::Constants::TYPE_UINT32(), 
                    'missSendLength', 2, undef
                ],

            ],
            { 'create_accessors' => 1,  }
        );
    }

    unless (OFAggregateStatisticsRequestPB->can('_pb_fields_list')) {
        Google::ProtocolBuffers->create_message(
            'OFAggregateStatisticsRequestPB',
            [
                [
                    Google::ProtocolBuffers::Constants::LABEL_OPTIONAL(), 
                    'OFMatchPB', 
                    'match', 1, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    Google::ProtocolBuffers::Constants::TYPE_UINT32(), 
                    'tableId', 2, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    Google::ProtocolBuffers::Constants::TYPE_UINT32(), 
                    'outPort', 3, undef
                ],

            ],
            { 'create_accessors' => 1,  }
        );
    }

    unless (OFFlowStatisticsReplyPB->can('_pb_fields_list')) {
        Google::ProtocolBuffers->create_message(
            'OFFlowStatisticsReplyPB',
            [
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    Google::ProtocolBuffers::Constants::TYPE_UINT32(), 
                    'tableId', 1, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_OPTIONAL(), 
                    'OFMatchPB', 
                    'match', 2, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    Google::ProtocolBuffers::Constants::TYPE_UINT32(), 
                    'durationSeconds', 3, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    Google::ProtocolBuffers::Constants::TYPE_UINT32(), 
                    'durationNanoseconds', 4, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    Google::ProtocolBuffers::Constants::TYPE_UINT32(), 
                    'priority', 5, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    Google::ProtocolBuffers::Constants::TYPE_UINT32(), 
                    'idleTimeout', 6, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    Google::ProtocolBuffers::Constants::TYPE_UINT32(), 
                    'hardTimeout', 7, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    Google::ProtocolBuffers::Constants::TYPE_UINT64(), 
                    'cookie', 8, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    Google::ProtocolBuffers::Constants::TYPE_UINT64(), 
                    'packetCount', 9, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    Google::ProtocolBuffers::Constants::TYPE_UINT64(), 
                    'byteCount', 10, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_REPEATED(), 
                    'OFActionPB', 
                    'actions', 11, undef
                ],

            ],
            { 'create_accessors' => 1,  }
        );
    }

    unless (AuthenReplyMessagePB::AuthenReplyPB->can('_pb_fields_list')) {
        Google::ProtocolBuffers->create_message(
            'AuthenReplyMessagePB::AuthenReplyPB',
            [
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    Google::ProtocolBuffers::Constants::TYPE_STRING(), 
                    'authenType', 1, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    Google::ProtocolBuffers::Constants::TYPE_INT32(), 
                    'fieldID', 2, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_OPTIONAL(), 
                    'ValuePB', 
                    'authenData', 3, undef
                ],

            ],
            { 'create_accessors' => 1,  }
        );
    }

    unless (OFMessagePB->can('_pb_fields_list')) {
        Google::ProtocolBuffers->create_message(
            'OFMessagePB',
            [
                [
                    Google::ProtocolBuffers::Constants::LABEL_OPTIONAL(), 
                    'OFMessagePB::OFTypePB', 
                    'ofType', 1, 2147483647
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_OPTIONAL(), 
                    Google::ProtocolBuffers::Constants::TYPE_UINT32(), 
                    'version', 2, 1
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_OPTIONAL(), 
                    Google::ProtocolBuffers::Constants::TYPE_UINT32(), 
                    'xid', 3, 0
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_OPTIONAL(), 
                    'OFHelloPB', 
                    'ofHello', 4, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_OPTIONAL(), 
                    'OFErrorPB', 
                    'ofError', 5, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_OPTIONAL(), 
                    'OFEchoRequestPB', 
                    'ofEchoRequest', 6, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_OPTIONAL(), 
                    'OFEchoReplyPB', 
                    'ofEchoReply', 7, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_OPTIONAL(), 
                    'OFVendorPB', 
                    'ofVendor', 8, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_OPTIONAL(), 
                    'OFFeaturesRequestPB', 
                    'ofFeaturesRequest', 9, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_OPTIONAL(), 
                    'OFFeaturesReplyPB', 
                    'ofFeaturesReply', 10, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_OPTIONAL(), 
                    'OFGetConfigRequestPB', 
                    'ofGetConfigRequest', 11, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_OPTIONAL(), 
                    'OFGetConfigReplyPB', 
                    'ofGetConfigReply', 12, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_OPTIONAL(), 
                    'OFSetConfigPB', 
                    'ofSetConfig', 13, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_OPTIONAL(), 
                    'OFPacketInPB', 
                    'ofPacketIn', 14, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_OPTIONAL(), 
                    'OFFlowRemovedPB', 
                    'ofFlowRemoved', 15, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_OPTIONAL(), 
                    'OFPortStatusPB', 
                    'ofPortStatus', 16, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_OPTIONAL(), 
                    'OFPacketOutPB', 
                    'ofPacketOut', 17, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_OPTIONAL(), 
                    'OFFlowModPB', 
                    'ofFlowMod', 18, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_OPTIONAL(), 
                    'OFPortModPB', 
                    'ofPortMod', 19, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_OPTIONAL(), 
                    'OFStatisticsRequestPB', 
                    'ofStatisticsRequest', 20, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_OPTIONAL(), 
                    'OFStatisticsReplyPB', 
                    'ofStatisticsReply', 21, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_OPTIONAL(), 
                    'OFBarrierRequestPB', 
                    'ofBarrierRequest', 22, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_OPTIONAL(), 
                    'OFBarrierReplyPB', 
                    'ofBarrierReply', 23, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_OPTIONAL(), 
                    'OFQueueGetConfigReplyPB', 
                    'ofQueueGetConfigReply', 24, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_OPTIONAL(), 
                    'OFQueueGetConfigRequestPB', 
                    'ofQueueGetConfigRequest', 25, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_OPTIONAL(), 
                    'OFSwitchStatusPB', 
                    'ofSwitchStatus', 99, undef
                ],

            ],
            { 'create_accessors' => 1,  }
        );
    }

    unless (OFSetConfigPB->can('_pb_fields_list')) {
        Google::ProtocolBuffers->create_message(
            'OFSetConfigPB',
            [
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    Google::ProtocolBuffers::Constants::TYPE_UINT32(), 
                    'flags', 1, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    Google::ProtocolBuffers::Constants::TYPE_UINT32(), 
                    'missSendLength', 2, undef
                ],

            ],
            { 'create_accessors' => 1,  }
        );
    }

    unless (OFActionStripVirtualLanPB->can('_pb_fields_list')) {
        Google::ProtocolBuffers->create_message(
            'OFActionStripVirtualLanPB',
            [

            ],
            { 'create_accessors' => 1,  }
        );
    }

    unless (OFMsgsDroppedInfoPB->can('_pb_fields_list')) {
        Google::ProtocolBuffers->create_message(
            'OFMsgsDroppedInfoPB',
            [
                [
                    Google::ProtocolBuffers::Constants::LABEL_REPEATED(), 
                    'OFMsgsDroppedInfoPB::OFMsgsCountPB', 
                    'ofMsgsCount', 1, undef
                ],

            ],
            { 'create_accessors' => 1,  }
        );
    }

    unless (OFMsgsDroppedInfoPB::OFMsgsCountPB->can('_pb_fields_list')) {
        Google::ProtocolBuffers->create_message(
            'OFMsgsDroppedInfoPB::OFMsgsCountPB',
            [
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    'OFMessagePB::OFTypePB', 
                    'ofType', 1, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    Google::ProtocolBuffers::Constants::TYPE_UINT32(), 
                    'count', 2, undef
                ],

            ],
            { 'create_accessors' => 1,  }
        );
    }

    unless (OFQueueGetConfigReplyPB::OFPacketQueuePB::OFQueuePropPB->can('_pb_fields_list')) {
        Google::ProtocolBuffers->create_message(
            'OFQueueGetConfigReplyPB::OFPacketQueuePB::OFQueuePropPB',
            [
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    'OFQueueGetConfigReplyPB::OFPacketQueuePB::OFQueuePropPB::OFQueuePropTypePB', 
                    'type', 1, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    Google::ProtocolBuffers::Constants::TYPE_UINT32(), 
                    'length', 2, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    Google::ProtocolBuffers::Constants::TYPE_UINT32(), 
                    'rate', 3, undef
                ],

            ],
            { 'create_accessors' => 1,  }
        );
    }

    unless (OFPacketInPB->can('_pb_fields_list')) {
        Google::ProtocolBuffers->create_message(
            'OFPacketInPB',
            [
                [
                    Google::ProtocolBuffers::Constants::LABEL_OPTIONAL(), 
                    Google::ProtocolBuffers::Constants::TYPE_SINT32(), 
                    'bufferID', 1, -1
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    Google::ProtocolBuffers::Constants::TYPE_UINT32(), 
                    'inPort', 2, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    'OFPacketInReasonPB', 
                    'reason', 3, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_OPTIONAL(), 
                    Google::ProtocolBuffers::Constants::TYPE_BYTES(), 
                    'packetData', 4, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_OPTIONAL(), 
                    'OFMatchPB', 
                    'ofMatch', 5, undef
                ],

            ],
            { 'create_accessors' => 1,  }
        );
    }

    unless (OFFlowStatisticsRequestPB->can('_pb_fields_list')) {
        Google::ProtocolBuffers->create_message(
            'OFFlowStatisticsRequestPB',
            [
                [
                    Google::ProtocolBuffers::Constants::LABEL_OPTIONAL(), 
                    'OFMatchPB', 
                    'match', 1, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    Google::ProtocolBuffers::Constants::TYPE_UINT32(), 
                    'tableId', 2, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    Google::ProtocolBuffers::Constants::TYPE_UINT32(), 
                    'outPort', 3, undef
                ],

            ],
            { 'create_accessors' => 1,  }
        );
    }

    unless (OFActionVirtualLanIdentifierPB->can('_pb_fields_list')) {
        Google::ProtocolBuffers->create_message(
            'OFActionVirtualLanIdentifierPB',
            [
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    Google::ProtocolBuffers::Constants::TYPE_UINT32(), 
                    'virtualLanIdentifier', 1, undef
                ],

            ],
            { 'create_accessors' => 1,  }
        );
    }

    unless (OFFeaturesRequestPB->can('_pb_fields_list')) {
        Google::ProtocolBuffers->create_message(
            'OFFeaturesRequestPB',
            [

            ],
            { 'create_accessors' => 1,  }
        );
    }

    unless (AddrInfoPB->can('_pb_fields_list')) {
        Google::ProtocolBuffers->create_message(
            'AddrInfoPB',
            [
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    Google::ProtocolBuffers::Constants::TYPE_INT32(), 
                    'ai_flags', 1, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    Google::ProtocolBuffers::Constants::TYPE_INT32(), 
                    'ai_family', 2, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    Google::ProtocolBuffers::Constants::TYPE_INT32(), 
                    'ai_socktype', 3, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    Google::ProtocolBuffers::Constants::TYPE_INT32(), 
                    'ai_protocol', 4, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    Google::ProtocolBuffers::Constants::TYPE_STRING(), 
                    'ai_canonname', 5, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_REPEATED(), 
                    'InetSockAddrPB', 
                    'sockaddr', 6, undef
                ],

            ],
            { 'create_accessors' => 1,  }
        );
    }

    unless (AuthenRequestMessagePB::AuthenRequestPB->can('_pb_fields_list')) {
        Google::ProtocolBuffers->create_message(
            'AuthenRequestMessagePB::AuthenRequestPB',
            [
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    Google::ProtocolBuffers::Constants::TYPE_BOOL(), 
                    'mandatory', 1, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    Google::ProtocolBuffers::Constants::TYPE_STRING(), 
                    'authenType', 2, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    Google::ProtocolBuffers::Constants::TYPE_INT32(), 
                    'fieldID', 3, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_OPTIONAL(), 
                    'ValuePB', 
                    'authenData', 4, undef
                ],

            ],
            { 'create_accessors' => 1,  }
        );
    }

    unless (SBOFMessagePB->can('_pb_fields_list')) {
        Google::ProtocolBuffers->create_message(
            'SBOFMessagePB',
            [
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    Google::ProtocolBuffers::Constants::TYPE_UINT64(), 
                    'datapathID', 1, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    'OFMessagePB', 
                    'ofMessage', 2, undef
                ],

            ],
            { 'create_accessors' => 1,  }
        );
    }

    unless (ErrorMessagePB->can('_pb_fields_list')) {
        Google::ProtocolBuffers->create_message(
            'ErrorMessagePB',
            [
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    'ErrorMessagePB::ErrorType', 
                    'errorType', 1, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_OPTIONAL(), 
                    Google::ProtocolBuffers::Constants::TYPE_INT32(), 
                    'authenErrorCode', 2, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_OPTIONAL(), 
                    'ExtensionMessagePB', 
                    'offendingExtension', 3, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_OPTIONAL(), 
                    'OFMsgsDroppedInfoPB', 
                    'ofMsgsDroppedInfo', 4, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_OPTIONAL(), 
                    'ProtocolErrorInfoPB', 
                    'protocolErrorInfo', 5, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_OPTIONAL(), 
                    'VersionMismatchInfoPB', 
                    'versionMismatchInfo', 6, undef
                ],

            ],
            { 'create_accessors' => 1,  }
        );
    }

    unless (OFPortStatisticsReplyPB->can('_pb_fields_list')) {
        Google::ProtocolBuffers->create_message(
            'OFPortStatisticsReplyPB',
            [
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    Google::ProtocolBuffers::Constants::TYPE_UINT32(), 
                    'portNumber', 1, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    Google::ProtocolBuffers::Constants::TYPE_UINT64(), 
                    'receivePackets', 2, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    Google::ProtocolBuffers::Constants::TYPE_UINT64(), 
                    'transmitPackets', 3, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    Google::ProtocolBuffers::Constants::TYPE_UINT64(), 
                    'receiveBytes', 4, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    Google::ProtocolBuffers::Constants::TYPE_UINT64(), 
                    'transmitBytes', 5, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    Google::ProtocolBuffers::Constants::TYPE_UINT64(), 
                    'receiveDropped', 6, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    Google::ProtocolBuffers::Constants::TYPE_UINT64(), 
                    'transmitDropped', 7, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    Google::ProtocolBuffers::Constants::TYPE_UINT64(), 
                    'receiveErrors', 8, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    Google::ProtocolBuffers::Constants::TYPE_UINT64(), 
                    'transmitErrors', 9, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    Google::ProtocolBuffers::Constants::TYPE_UINT64(), 
                    'receiveFrameErrors', 10, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    Google::ProtocolBuffers::Constants::TYPE_UINT64(), 
                    'receiveOverrunErrors', 11, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    Google::ProtocolBuffers::Constants::TYPE_UINT64(), 
                    'receiveCRCErrors', 12, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    Google::ProtocolBuffers::Constants::TYPE_UINT64(), 
                    'collisions', 13, undef
                ],

            ],
            { 'create_accessors' => 1,  }
        );
    }

    unless (OFActionTransportLayerSourcePB->can('_pb_fields_list')) {
        Google::ProtocolBuffers->create_message(
            'OFActionTransportLayerSourcePB',
            [
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    Google::ProtocolBuffers::Constants::TYPE_UINT32(), 
                    'transportPort', 1, undef
                ],

            ],
            { 'create_accessors' => 1,  }
        );
    }

    unless (OFBarrierRequestPB->can('_pb_fields_list')) {
        Google::ProtocolBuffers->create_message(
            'OFBarrierRequestPB',
            [

            ],
            { 'create_accessors' => 1,  }
        );
    }

    unless (OFActionEnqueuePB->can('_pb_fields_list')) {
        Google::ProtocolBuffers->create_message(
            'OFActionEnqueuePB',
            [
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    Google::ProtocolBuffers::Constants::TYPE_UINT32(), 
                    'port', 1, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    Google::ProtocolBuffers::Constants::TYPE_UINT32(), 
                    'queueId', 2, undef
                ],

            ],
            { 'create_accessors' => 1,  }
        );
    }

    unless (ProtocolErrorInfoPB->can('_pb_fields_list')) {
        Google::ProtocolBuffers->create_message(
            'ProtocolErrorInfoPB',
            [
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    'ProtocolErrorInfoPB::ProtocolErrorType', 
                    'protocolErrorType', 1, undef
                ],

            ],
            { 'create_accessors' => 1,  }
        );
    }

    unless (OFAggregateStatisticsReplyPB->can('_pb_fields_list')) {
        Google::ProtocolBuffers->create_message(
            'OFAggregateStatisticsReplyPB',
            [
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    Google::ProtocolBuffers::Constants::TYPE_UINT64(), 
                    'packetCount', 1, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    Google::ProtocolBuffers::Constants::TYPE_UINT64(), 
                    'byteCount', 2, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    Google::ProtocolBuffers::Constants::TYPE_UINT32(), 
                    'flowCount', 3, undef
                ],

            ],
            { 'create_accessors' => 1,  }
        );
    }

    unless (HelloMessagePB->can('_pb_fields_list')) {
        Google::ProtocolBuffers->create_message(
            'HelloMessagePB',
            [
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    Google::ProtocolBuffers::Constants::TYPE_UINT32(), 
                    'versionNB', 1, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    Google::ProtocolBuffers::Constants::TYPE_UINT32(), 
                    'versionSB', 2, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    Google::ProtocolBuffers::Constants::TYPE_STRING(), 
                    'clientID', 3, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_OPTIONAL(), 
                    Google::ProtocolBuffers::Constants::TYPE_STRING(), 
                    'programName', 4, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_OPTIONAL(), 
                    'SetQueuePolicyMessagePB', 
                    'initialPolicy', 5, undef
                ],

            ],
            { 'create_accessors' => 1,  }
        );
    }

    unless (OFFeaturesReplyPB->can('_pb_fields_list')) {
        Google::ProtocolBuffers->create_message(
            'OFFeaturesReplyPB',
            [
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    Google::ProtocolBuffers::Constants::TYPE_UINT64(), 
                    'datapathId', 1, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    Google::ProtocolBuffers::Constants::TYPE_UINT32(), 
                    'buffers', 2, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    Google::ProtocolBuffers::Constants::TYPE_UINT32(), 
                    'tables', 3, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    Google::ProtocolBuffers::Constants::TYPE_UINT32(), 
                    'capabilities', 4, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    Google::ProtocolBuffers::Constants::TYPE_UINT32(), 
                    'actions', 5, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_REPEATED(), 
                    'OFPhysicalPortPB', 
                    'ports', 6, undef
                ],

            ],
            { 'create_accessors' => 1,  }
        );
    }

    unless (OFActionTransportLayerDestinationPB->can('_pb_fields_list')) {
        Google::ProtocolBuffers->create_message(
            'OFActionTransportLayerDestinationPB',
            [
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    Google::ProtocolBuffers::Constants::TYPE_UINT32(), 
                    'transportPort', 1, undef
                ],

            ],
            { 'create_accessors' => 1,  }
        );
    }

    unless (OFQueueGetConfigReplyPB->can('_pb_fields_list')) {
        Google::ProtocolBuffers->create_message(
            'OFQueueGetConfigReplyPB',
            [
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    Google::ProtocolBuffers::Constants::TYPE_UINT32(), 
                    'portNumber', 1, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_REPEATED(), 
                    'OFQueueGetConfigReplyPB::OFPacketQueuePB', 
                    'queues', 2, undef
                ],

            ],
            { 'create_accessors' => 1,  }
        );
    }

    unless (OFEchoRequestPB->can('_pb_fields_list')) {
        Google::ProtocolBuffers->create_message(
            'OFEchoRequestPB',
            [
                [
                    Google::ProtocolBuffers::Constants::LABEL_OPTIONAL(), 
                    Google::ProtocolBuffers::Constants::TYPE_BYTES(), 
                    'payload', 1, undef
                ],

            ],
            { 'create_accessors' => 1,  }
        );
    }

    unless (OFQueueStatisticsRequestPB->can('_pb_fields_list')) {
        Google::ProtocolBuffers->create_message(
            'OFQueueStatisticsRequestPB',
            [
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    Google::ProtocolBuffers::Constants::TYPE_UINT32(), 
                    'portNumber', 1, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    Google::ProtocolBuffers::Constants::TYPE_UINT32(), 
                    'queueId', 2, undef
                ],

            ],
            { 'create_accessors' => 1,  }
        );
    }

    unless (OFStatisticsRequestPB->can('_pb_fields_list')) {
        Google::ProtocolBuffers->create_message(
            'OFStatisticsRequestPB',
            [
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    'OFStatisticTypePB', 
                    'statisticType', 1, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_REQUIRED(), 
                    Google::ProtocolBuffers::Constants::TYPE_UINT32(), 
                    'flags', 2, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_OPTIONAL(), 
                    'OFFlowStatisticsRequestPB', 
                    'flowStatisticsRequest', 4, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_OPTIONAL(), 
                    'OFAggregateStatisticsRequestPB', 
                    'aggregateStatisticsRequest', 5, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_OPTIONAL(), 
                    'OFPortStatisticsRequestPB', 
                    'portStatisticsRequest', 7, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_OPTIONAL(), 
                    'OFQueueStatisticsRequestPB', 
                    'queueStatisticsRequest', 8, undef
                ],
                [
                    Google::ProtocolBuffers::Constants::LABEL_OPTIONAL(), 
                    'OFVendorStatisticsPB', 
                    'vendorStatistics', 9, undef
                ],

            ],
            { 'create_accessors' => 1,  }
        );
    }

    unless (OFEchoReplyPB->can('_pb_fields_list')) {
        Google::ProtocolBuffers->create_message(
            'OFEchoReplyPB',
            [
                [
                    Google::ProtocolBuffers::Constants::LABEL_OPTIONAL(), 
                    Google::ProtocolBuffers::Constants::TYPE_BYTES(), 
                    'payload', 1, undef
                ],

            ],
            { 'create_accessors' => 1,  }
        );
    }

}
1;
